/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 28 02:54:12 GMT 2018
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.ATM;
import tutorial.ATMCard;
import tutorial.Bank;
import tutorial.BankAccount;
import tutorial.Company;
import tutorial.CurrentAccount;
import tutorial.Owner;
import tutorial.Person;
import tutorial.SavingsAccount;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ATM_ESTest extends ATM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      Company company0 = new Company("E's`nv)V V|pYkF?5");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 384);
      int[] intArray0 = new int[4];
      bank0.addAccount(currentAccount0);
      int[] intArray1 = new int[4];
      intArray1[0] = 384;
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray1);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      assertNotSame(intArray0, intArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      CurrentAccount currentAccount0 = new CurrentAccount((Owner) null, 12);
      int[] intArray0 = new int[3];
      bank0.addAccount(currentAccount0);
      int[] intArray1 = new int[1];
      ATMCard aTMCard0 = new ATMCard((Owner) null, currentAccount0, intArray0);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray1);
      assertNotSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[2];
      bank0.addAccount((BankAccount) null);
      ATMCard aTMCard0 = new ATMCard((Owner) null, (BankAccount) null, intArray0);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      // Undeclared exception!
      try { 
        aTM0.withdraw((-572));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tutorial.ATM", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Bank bank0 = new Bank();
      Company company0 = new Company("tutorial.Owner");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 3042);
      bank0.addAccount(currentAccount0);
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTM0.insertCard(aTMCard0);
      // Undeclared exception!
      try { 
        aTM0.enterPin((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tutorial.ATM", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      aTM0.ejectCard();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      aTM0.withdraw(0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[1];
      bank0.addAccount((BankAccount) null);
      ATMCard aTMCard0 = new ATMCard((Owner) null, (BankAccount) null, intArray0);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      // Undeclared exception!
      try { 
        aTM0.deposit((-879));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tutorial.ATM", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      aTM0.deposit(0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      Company company0 = new Company("E's`nv)V V|pYkF?5");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 384);
      int[] intArray0 = new int[4];
      bank0.addAccount(currentAccount0);
      intArray0[3] = 384;
      int[] intArray1 = new int[4];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray1);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      assertEquals(4, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      Company company0 = new Company("E's`nv)V V|pYkF?5");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 384);
      int[] intArray0 = new int[4];
      bank0.addAccount(currentAccount0);
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      int[] intArray1 = new int[5];
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray1);
      assertEquals(5, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Bank bank0 = new Bank();
      Person person0 = new Person("$AGC/8O|U>", "org.apache.commons.collections.list.AbstractListDecorator");
      CurrentAccount currentAccount0 = new CurrentAccount(person0, (-1));
      bank0.addAccount(currentAccount0);
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[1];
      ATMCard aTMCard0 = new ATMCard(person0, currentAccount0, intArray0);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      aTM0.withdraw(0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[1];
      aTM0.enterPin(intArray0);
      assertEquals(1, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Bank bank0 = new Bank();
      Person person0 = new Person("$AGC/8O|U>", "$AGC/8O|U>");
      CurrentAccount currentAccount0 = new CurrentAccount(person0, 16);
      bank0.addAccount(currentAccount0);
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[1];
      ATMCard aTMCard0 = new ATMCard(person0, currentAccount0, intArray0);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      aTM0.withdraw(16);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      Person person0 = new Person("@oz]RX)+|q<_U", "@oz]RX)+|q<_U");
      CurrentAccount currentAccount0 = new CurrentAccount(person0, (-2682));
      int[] intArray0 = new int[0];
      ATMCard aTMCard0 = new ATMCard(person0, currentAccount0, intArray0);
      aTMCard0.invalidate();
      aTM0.insertCard(aTMCard0);
      assertFalse(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      Company company0 = new Company("'s`nvV V|YaF?5");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 3);
      int[] intArray0 = new int[3];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTM0.insertCard(aTMCard0);
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ATM aTM0 = new ATM((Bank) null);
      int[] intArray0 = new int[2];
      Person person0 = new Person("", "=/bu:aHo");
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      ATMCard aTMCard0 = new ATMCard(person0, savingsAccount0, intArray0);
      // Undeclared exception!
      try { 
        aTM0.insertCard(aTMCard0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tutorial.ATM", e);
      }
  }
}
