/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 28 02:55:19 GMT 2018
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.Company;
import tutorial.CurrentAccount;
import tutorial.Owner;
import tutorial.Person;
import tutorial.SavingsAccount;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BankAccount_ESTest extends BankAccount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Company company0 = new Company("trZ^tFxkZ");
      SavingsAccount savingsAccount0 = new SavingsAccount(company0);
      savingsAccount0.deposit((-114));
      assertEquals((-114), savingsAccount0.getBalance());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Company company0 = new Company("tutorial.Owner");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 0);
      currentAccount0.withdraw(0);
      assertEquals(0, currentAccount0.getBalance());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Company company0 = new Company("trZ^tFxkZ");
      SavingsAccount savingsAccount0 = new SavingsAccount(company0);
      boolean boolean0 = savingsAccount0.withdraw(1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      savingsAccount0.getOwner();
      assertEquals(0, savingsAccount0.getBalance());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Person person0 = new Person("i\"P8>N", "cpHgIZEf");
      CurrentAccount currentAccount0 = new CurrentAccount(person0, (-1));
      currentAccount0.withdraw((-1));
      int int0 = currentAccount0.getBalance();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Company company0 = new Company("c1G");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, (-967));
      currentAccount0.balance = (-967);
      int int0 = currentAccount0.getBalance();
      assertEquals((-967), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Person person0 = new Person("0|wl>", "0|wl>");
      CurrentAccount currentAccount0 = new CurrentAccount(person0, (-21));
      int int0 = currentAccount0.getBalance();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Person person0 = new Person("0|wl>", "0|wl>");
      SavingsAccount savingsAccount0 = new SavingsAccount(person0);
      Owner owner0 = savingsAccount0.getOwner();
      assertNotNull(owner0);
      assertEquals(0, savingsAccount0.getBalance());
  }
}
